#assign params
variable TIME_STEPS equal 1000
variable THERMO_STEP equal 10
variable DUMP_STEP equal 10
#end assign params




variable T0         equal 600
variable T1         equal 1000
variable n_temps    equal 4

# variable T equal 300

###LOOP 1###
label T_loop
variable iter loop ${n_temps}
variable T equal ${T0}+(${T1}-${T0})*(${iter}-1)/${n_temps}

# ----------------- Init Section -----------------

include "spce_water_system.in.init"


# ----------------- Atom Definition Section -----------------

read_data "spce_water_system.data"

# ----------------- Settings Section -----------------

include "spce_water_system.in.settings"


# ----------------- Run Section -----------------

# The lines above define the system you want to simulate.
# What you do next is up to you.
# Typically a user would minimize and equilibrate
# the system using commands similar to the following:
#  ----   examples   ----
#
#  -- minimize --
# minimize 1.0e-5 1.0e-7 1000 10000
# (Note: Some fixes, for example "shake", interfere with the minimize command,
#        You can use the "unfix" command to disable them before minimization.)
#  -- declare time step for normal MD --
# timestep 1.0
#  -- run at constant pressure (Nose-Hoover)--
# fix   fxnpt all npt temp 300.0 300.0 100.0 iso 1.0 1.0 1000.0 drag 1.0
#  -- ALTERNATELY, run at constant volume (Nose-Hoover) --
# fix   fxnvt all nvt temp 300.0 300.0 500.0 tchain 1
#  -- ALTERNATELY, run at constant volume using Langevin dynamics. --
#  -- (This is good for sparse CG polymers in implicit solvent.)   --
# fix fxLAN all langevin 300.0 300.0 5000 48279
# fix fxNVE all nve  #(<--needed by fix langevin)
#  -- Now, finally run the simulation --
# run   50000
#  ---- (end of examples) ----



timestep        1.0
# dump            1 all custom 10 traj_npt.lammpstrj id mol type x y z ix iy iz
# fix             fxnpt all npt temp 300.0 300.0 100.0 iso 1.0 1.0 1000.0 drag 1.0
fix             fxnpt all npt temp $T $T 10 iso 1.0 1.0 1000.0 drag 1.0
thermo          10
run             900

reset_timestep 0

compute myRDF all rdf 50
compute msd all msd
fix 2 all ave/time 100 1 100 c_myRDF[*] file data/log.rdf_T_${T} mode vector



thermo_style custom step temp press c_msd[4]

log data/log.msd_T_${T}
thermo ${THERMO_STEP}

run ${TIME_STEPS}                                #run simulation for 5000 time steps

clear
next iter
jump SELF T_loop





#
