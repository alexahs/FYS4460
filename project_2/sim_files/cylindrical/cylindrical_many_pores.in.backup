variable    TIME_STEPS    equal 100
variable    THERMO_STEP   equal 100
variable    DUMP_STEP     equal 10
variable    EQUIL_STEPS_1 equal 100
variable    EQUIL_STEPS_2 equal 100

variable    T0      equal 0.851
variable    T1      equal 0.851
variable    Tdamp   equal 0.5

variable    b       equal 5.72 #cell length in Ã…
variable    sigma   equal 3.405
variable    rhostar equal 4/((${b}/${sigma})^3)
variable    nCells  equal 20
variable    seed    equal 87287

#3d Lennard-Jones gas
units lj
dimension 3
boundary p p p
atom_style atomic

lattice fcc ${rhostar}
region simbox block 0 ${nCells} 0 ${nCells} 0 ${nCells}
create_box 2 simbox
create_atoms 1 box

mass * 1.0


pair_style lj/cut 3.0
pair_coeff * * 1.0 1.0 3.0
# neigh_modify every 1 delay 0 check yes


# fix 1 all nve
# fix 2 all temp/berendsen ${T0} ${T1} ${Tdamp}
fix 1 all nvt temp ${T0} ${T1} ${Tdamp}


velocity all create ${T0} ${seed}

#thermalize
thermo ${THERMO_STEP}
run ${EQUIL_STEPS_1}

#create pore
variable    ymid     equal ${nCells}/2
variable    zmid     equal ${nCells}/2
# variable    radius   equal 20/${sigma}
variable    radius_temp   file radius.txt
variable    radius equal ${radius_temp}/($b/${sigma})
# print "RADIUS:::::${radius}"
region outside cylinder x ${ymid} ${zmid} ${radius} 0 EDGE side out
region inside cylinder x ${ymid} ${zmid} ${radius} 0 EDGE side in

#define moving and static particles
group moving_particles region inside
group static_particles region outside

#reduce density of moving particles
variable remove_ratio equal 0.5
delete_atoms porosity inside ${remove_ratio} ${seed}

#give static particles different type (for vizualization)
set group static_particles type 2

#remove forces and velocity from static
set group static_particles vx 0.0 vy 0.0 vz 0.0

unfix 1
fix 1 moving_particles nvt temp ${T0} ${T1} ${Tdamp}

#introduce flow to moving particles
fix 2 moving_particles addforce 0.1 0.0 0.0

thermo ${THERMO_STEP}

run ${EQUIL_STEPS_2}

unfix 1
fix 1 moving_particles nve

reset_timestep 0
compute moving_temp moving_particles temp
variable velocity_cm equal vcm(moving_particles,x)

variable time equal step*dt
variable flowing equal count(moving_particles)/${remove_ratio}
variable static equal count(static_particles)
variable phi equal ${flowing}/(${static}+${flowing})

print "porosity of system: ${phi}"

thermo_style custom step v_time c_moving_temp v_velocity_cm press
log log.cylinder_r${radius}_phi${phi}
dump 1 all custom ${DUMP_STEP} dump_phi${phi}.lammpstrj id type x y z vx vy vz
# dump final moving_particles custom ${dump_final} moving_particles_final_T.lammpstrj y z vx
# dump_modify final first no

thermo ${THERMO_STEP}

run ${TIME_STEPS}
